buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath 'cz.habarta.typescript-generator:typescript-generator-gradle-plugin:2.36.1070'
		classpath 'cz.habarta.typescript-generator:typescript-generator-spring:2.36.1070'
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.7.1"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.12.RELEASE"
		classpath "gradle.plugin.org.flywaydb:gradle-plugin-publishing:8.5.12"
	}
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "org.flywaydb.flyway"
apply plugin: 'cz.habarta.typescript-generator'
apply plugin: 'java'

sourceCompatibility = '17'

repositories {
	mavenCentral()
}

springBoot {
	buildInfo()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-cache:2.7.0'
	implementation 'org.flywaydb:flyway-mysql:8.5.12'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.5'

	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.0'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.0'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.9'

	implementation project(':library')

	// developmentOnly("org.springframework.boot:spring-boot-devtools")
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.0'
}

jar {
	enabled = false
	archivesBaseName = 'api'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("build") { finalizedBy("preparePublishNpm") }

task preparePublishNpm() {
	dependsOn(generateTypeScript)
	doLast {
		new File("${projectDir}/build/typescript-generator/", "package.json").text = """{
  "name": "@mineaurion/api",
  "repository": "git://github.com/Mineaurion/Api.git",
  "version": "$version",
  "types": "application.d.ts"
}
"""
	}
}

generateTypeScript {
	classes = [
			'com.mineaurion.api.library.model.query.Server',
			'com.mineaurion.api.server.model.Server',
	]
	outputFileType = 'declarationFile'
	outputFile = 'build/typescript-generator/application.d.ts'
	jsonLibrary = 'jackson2'
	outputKind = 'module'
	noFileComment = true
	stringQuotes = "singleQuotes"
	ignoreSwaggerAnnotations = false
	customTypeNamingFunction  = "function(name, simpleName) { if (name.startsWith('com.mineaurion.api.library.model.query')) return 'Query' + simpleName; }"
}
